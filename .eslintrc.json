{
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "sourceType": "module"
  },
  "extends": [
    "react-app",
    "react-app/jest"
  ],
  "rules": {
    // Layout & Formatting
    // See more on https://eslint.org/docs/rules/#layout-formatting
    "quotes": [ // использования обратных кавычек, двойных или одинарных кавычек
      "warn",
      "single" // Одинарные ковычки
    ],
    "comma-dangle": [ // использование конечных запятых в литералах объектов и массивов
      "warn",
      // наличия запятых в конце, когда последний элемент находится в строке,
      // и запрещает использование конечных запятых, когда последний элемент находится на той же строке
      "always-multiline"
    ],
    "semi": [ // последовательное использование точек с запятой
      "warn",
      "never" // запрещает точки с запятой в конце операторов (за исключением устранения неоднозначности операторов)
    ],
    "no-trailing-spaces": [ // запрещает завершающие пробелы (пробелы, табуляции и другие символы пробелов Unicode) в конце строк
      "warn"
    ],
    "linebreak-style": [ // обеспечивает согласованные окончания строк независимо от операционной системы
      "warn",
      "unix"
    ],
    "array-bracket-spacing": [ // обеспечивает постоянный интервал внутри скобок массива
      "warn",
      "never" // внутри скобок массива не должно быть отступов
    ],
    "arrow-parens": [ // требует заключения в круглые скобки параметров стрелочной функции независимо от арности
      "warn",
      "as-needed", // не применять скобки, где их можно опустить
      { "requireForBlockBody": true }
    ],
    "arrow-spacing": [ // стиль интервалов до / после стрелки функции стрелки
      "warn",
      {
        "before": true, // должно быть один или несколько пробелов после стрелки
        "after": true // должно быть один или несколько пробелов до стрелки
      }
    ],
    "block-spacing": [ // постоянный интервал внутри токена открытого блока и следующего токена в той же строке
      "warn",
      "always" // требуется один или несколько пробелов
    ],
    "comma-spacing": [ // интервал до и после запятых в объявлениях переменных, литералах массива, литералах объектов, параметрах функций и последовательностях
      "warn",
      {
        "before": false, // не должно быть пробелов до запятой
        "after": true // должно быть один или несколько пробелов после запятой
      }
    ],
    "computed-property-spacing": [ // интервал внутри скобок вычисляемых свойств
      "warn",
      "never" // запрещает пробелы внутри скобок вычисляемых свойств
    ],
    "func-call-spacing": [ // использование пробелов между именем функции и открывающей круглой скобкой, которая ее вызывает
      "warn",
      "never" // не допускает пробелов между именем функции и открывающей скобкой
    ],
    "implicit-arrow-linebreak": [ // согласованного местоположения стрелочной функции, содержащей неявный возврат
      "warn",
      "beside" // требуется новая строка перед телом функции стрелки
    ],
    "jsx-quotes": [ // последовательного использования двойных или одинарных кавычек в атрибутах JSX
      "warn",
      "prefer-single" // одинарные кавычки для всех значений атрибутов JSX
    ],
    "lines-between-class-members": [ // линии между членами класса
      "warn",
      "always" // требуется пустая строка после членов класса
    ],
    "new-parens": [ // использование круглых скобок при вызове конструктора без аргументов с использованием ключевого слова new
      "warn",
      "always" // круглые скобки после нового конструктора без аргументов
    ],
    "object-curly-newline": [ // разрыв строки между {и его следующим токеном, и между} и его предыдущим токеном объектных литералов или деструктурирующих назначений
      "warn",
      { "consistent": true }
    ],
    "object-curly-spacing": [ // интервал внутри фигурных скобок литералов объектов, деструктурирующих назначений и спецификаторов импорта / экспорта
      "warn",
      "always" // требуется интервал внутри фигурных скобок (кроме {})
    ],
    "space-before-blocks": [ // интервалов перед блоками. Применяется только к блокам, которые не начинаются с новой строки
      "warn",
      "always" // требует одного аргумента. блоки всегда должны иметь хотя бы один предшествующий пробел
    ],
    "space-before-function-paren": [ // интервала перед скобками функций
      "warn",
      {
        "anonymous": "always", // для анонимных функциональных выражений требуется пробел, за которым следует (
        "named": "always", // для именованных функциональных выражений требуется пробел, за которым следует (
        "asyncArrow": "always" // для выражений асинхронных стрелочных функций требуется пробел, за которым следует (
      }
    ],
    "space-in-parens": [ // постоянный интервал непосредственно внутри круглых скобок
      "warn",
      "never" // принудительно устанавливает нулевые пробелы внутри круглых скобок
    ],
    "switch-colon-spacing": [ // интервалом между двоеточиями в предложениях case и default в операторах switch
      "warn",
      {
        "after": true, // требует одного или нескольких пробелов после двоеточия
        "before": false // запрещает перед двоеточиями
      }
    ],
    // "react-hooks/exhaustive-deps": "off",
    "id-match": ["error", "^[a-zA-Z_0-9]*$"],
    "no-warning-comments": ["error", {"terms": ["fixme"], "location": "start"}],
    "import/no-anonymous-default-export": [2, {"allowObject": true}],
    "import/order": ["warn", {
      "pathGroups": [
        {
          "pattern": "@src/**",
          "group": "external",
          "position": "after"
        }
      ],
      "pathGroupsExcludedImportTypes": ["builtin"]
    }],

    // "no-unused-vars": "warn",
    "indent": [
      "warn",
      2, // 2 отступа
    { "ignoredNodes": ["TemplateLiteral"] }
    ]
  }
}
